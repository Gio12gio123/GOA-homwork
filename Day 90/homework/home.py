# Tuple და Set ორივე სასარგებლოა მონაცემების სტრუქტურაში, მაგრამ მათი გამოყენების მიზანი განსხვავებულია.

# Tuple: ეს არის immutable (არამორგებადი) მონაცემთა სტრუქტურა, რომელიც გამოიყენება როდესაც გვჭირდება შეუცვლელი მონაცემები. Tuple-ის ელემენტები ერთმანეთთან დაკავშირებული და წესრიგში უნდა იყვნენ, ამიტომ მას ხშირად იყენებენ, როდესაც მონაცემები უნდა იყოს შეუცვლელი და მნიშვნელოვანი დანიშნულებისათვის, მაგალითად: (მაგრამ არა მხოლოდ) როგორც ფუნქციის შედეგები ან როგორც მრავალმხრივი მონაცემების კონტეინერი.

# პროდაქტიული გამოყენება:

# მნიშვნელობის გროვა, რომელიც არ უნდა შეიცვალოს.
# ფუნქციების მრავალმხრივი შედეგების შენახვა.
# Set: ეს არის mutable (მოდიფიცირებადი) მონაცემთა სტრუქტურა, რომელიც შეიცავს უნიკალურ ელემენტებს. Set-ი არ ინარჩუნებს ელემენტების წესრიგს და შეუძლია მოიცვას მხოლოდ უნიკალური ელემენტები. იმის გამო, რომ ის არ ინარჩუნებს რიგის მნიშვნელობას, ეს გამოყენებული იქნება ძირითადად იქ, სადაც გვჭირდება უნიკალურობის უზრუნველყოფა.

# პროდაქტიული გამოყენება:

# როდესაც გვჭირდება მხოლოდ უნიკალური ელემენტები.
# სამუშაოდ, როდესაც გვჭირდება ოპერაციები, როგორიცაა გაერთიანება, გადაკვეთა და სხვ.



# Tuple-ის დესტრუქტურირება
person = ("Alice", 25)
name, age = person
print(name)  # Alice
print(age)   # 25


# Tuple-ის დესტრუქტურირება
coordinates = (3, 4)
x, y = coordinates
print(x)  # 3
print(y)  # 4



# Tuple-ის დესტრუქტურირება
colors = ("Red", "Green", "Blue")
first, second, third = colors
print(first)  # Red
print(second) # Green
print(third)  # Blue

# List-ის შექმნა დუპლიკატებით
list1 = [1, 2, 2, 3, 4, 4, 5]
print("Original list:", list1)

# set() ფუნქციის გამოყენება
unique_elements = set(list1)
print("Set without duplicates:", unique_elements)